class Solution {
    static int rowpos=0;
    static int colpos=0;
    public int[][] generateMatrix(int n) {
        int[][] matrix = new int[n][n];
        
           rowpos=0;
        colpos=0;
        boolean[][] seen = new boolean[matrix.length][matrix[0].length];
        List<Integer> spiral = new ArrayList<Integer>();
        int posx=0;
        int posy=0;
        
        int[] rows =new int[]{0,1,0,-1};
        int[] columns = new int[]{1,0,-1,0};
        int x=1;
        while(x<=n*n){
        
            matrix[posx][posy]=x;
            seen[posx][posy]=true;
            if(posx+rows[rowpos]>=matrix.length||posy+columns[colpos]>=matrix[0].length||posy+columns[colpos]<0||posx+rows[rowpos]<0||seen[posx+rows[rowpos]][posy+columns[colpos]]){
               iterate(); 
                posx+=rows[rowpos];
                posy+=columns[colpos];
            }else{
                posx+=rows[rowpos];
                posy+=columns[colpos];
            }
            x++;
        }
        return matrix;
    }
    
    
    public static void iterate(){
        rowpos++;
        colpos++;
        if(rowpos>=4){
            rowpos=0;
            colpos=0;
        }
    }
}

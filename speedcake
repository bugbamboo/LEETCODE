class Solution {
    public int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) {
        Arrays.sort(horizontalCuts);
        Arrays.sort(verticalCuts);
        long currenth=0;
        long temp=0;
        long currentv =0;
    
        for(int i = 0; i<=horizontalCuts.length; i++){
            if(i==0){
                temp=horizontalCuts[i];
            }
            else if(i==horizontalCuts.length){
                temp=h-horizontalCuts[horizontalCuts.length -1];
            }else{
                temp=horizontalCuts[i]-horizontalCuts[i-1];
            }
            if(temp>currenth){
                currenth=temp;
            }
            
        }
        temp = 0;
        for(int i = 0; i<=verticalCuts.length; i++){
            if(i==0){
                temp=verticalCuts[0];
            }
            else if(i==verticalCuts.length){
                temp=w-verticalCuts[verticalCuts.length -1];
            }else{
                temp=verticalCuts[i]-verticalCuts[i-1];
            }
            if(temp>currentv){
                currentv=temp;
            }
            
        }
        long x =  (currenth*currentv)%1000000007;
        int f=(int) x;
        return f;
    }
}
